Lab 6
Grader: Mary Connolly

Overall, your programs look great. Check out some comments/tips below!

saylist.cpp 20/20
    Resorting the sayings every time a new saying is inserted is inefficient. This has an efficiency of O(n^2). You can insert a saying in O(n) time by traversing the linked list and inserting the saying once you find where it fits alphabetically.

letterfreq.cpp 19/20
    -1 There should be a check in deletesaying to see if the user input is valid. E.g. if there are 12 sayings and the user enters 13 then there is no need to try and delete it.

    Good use of ascii values in dispFreq. Also good job using a function:)
    If you index each letter value by subtracting 'A' first, then freq only needs to have a length of 26, which saves space.
    -0 Output could be formatted a little nicer. (e.g. lining up columns)
    -0 For letters and total spaces, the output would look nicer if you printed the whole number instead of using notation like 3.4933e+06

GRADE: 39/40
